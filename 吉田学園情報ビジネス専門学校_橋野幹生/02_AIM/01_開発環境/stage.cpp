#include "item.h"
#include "block.h"
#include "stage.h"
#include "goal.h"
#include "ladder.h"
#include "time.h"
#include "button.h"
#include "sound.h"
#include "map.h"

int g_nCntRL;
int nCoin;
int g_nCountCoin;
int g_nS;

void Stage(STAGE_No nSelect)
{
	g_nCntRL = 0;
	g_nCountCoin = 0;
	nCoin = 0;

	g_nS = nSelect;

	switch (nSelect)
	{
	case STAGE_No_0:
		//時間設定
		SetTime(90);
		SetMap();

		//ゴール -------------------------------------
		SetGoal(D3DXVECTOR3((SCREEN_WIDTH / 2), SCREEN_HEIGHT - (BLOCK_HEIGHT / 2), 0.0f));

		break;

	case STAGE_No_1:
		//時間設定
		SetTime(90);

		//ブロック -----------------------------------
		//地面
		SetBlock(D3DXVECTOR3((SCREEN_WIDTH / 2), SCREEN_HEIGHT - (BLOCK_HEIGHT / 2), 0.0f), BLOCKTYPE_NOMAL, BLOCKSTATE_NOMAL, BLOCK_WIDTH * 34, BLOCK_HEIGHT * 1, 2);
		
		//天井
		SetBlock(D3DXVECTOR3((SCREEN_WIDTH / 2), (BLOCK_HEIGHT / 2), 0.0f), BLOCKTYPE_NOMAL, BLOCKSTATE_NOMAL, BLOCK_WIDTH * 32, BLOCK_HEIGHT * 1, 2);

		//1段目
		SetBlock(D3DXVECTOR3(40.0f, 560.0f, 0.0f), BLOCKTYPE_NOMAL, BLOCKSTATE_NOMAL, BLOCK_WIDTH * 4, BLOCK_HEIGHT * 1, 2);
		SetBlock(D3DXVECTOR3(240.0f, 560.0f, 0.0f), BLOCKTYPE_NOMAL, BLOCKSTATE_NOMAL, BLOCK_WIDTH * 4, BLOCK_HEIGHT * 1, 2);
		SetBlock(D3DXVECTOR3(440.0f, 560.0f, 0.0f), BLOCKTYPE_NOMAL, BLOCKSTATE_NOMAL, BLOCK_WIDTH * 4, BLOCK_HEIGHT * 1, 2);
		SetBlock(D3DXVECTOR3((SCREEN_WIDTH / 2), 560.0f, 0.0f), BLOCKTYPE_NOMAL, BLOCKSTATE_NOMAL, BLOCK_WIDTH * 4, BLOCK_HEIGHT * 1, 2);
		SetBlock(D3DXVECTOR3(940.0f, 560.0f, 0.0f), BLOCKTYPE_NOMAL, BLOCKSTATE_NOMAL, BLOCK_WIDTH * 9, BLOCK_HEIGHT * 1, 2);
		SetBlock(D3DXVECTOR3(1240.0f, 560.0f, 0.0f), BLOCKTYPE_NOMAL, BLOCKSTATE_NOMAL, BLOCK_WIDTH * 4, BLOCK_HEIGHT * 1, 2);

		SetBlock(D3DXVECTOR3(230.0f, 620.0f, 0.0f), BLOCKTYPE_NOMAL, BLOCKSTATE_NOMAL, BLOCK_WIDTH * 1, BLOCK_HEIGHT * 3, 2);
		SetBlock(D3DXVECTOR3((SCREEN_WIDTH - 250.0f), 560.0f, 0.0f), BLOCKTYPE_NOMAL, BLOCKSTATE_NOMAL, BLOCK_WIDTH * 1, BLOCK_HEIGHT * 6, 2);

		//2段目
		SetBlock(D3DXVECTOR3(50.0f, 420.0f, 0.0f), BLOCKTYPE_NOMAL, BLOCKSTATE_NOMAL, BLOCK_WIDTH * 8, BLOCK_HEIGHT * 1, 2);
		SetBlock(D3DXVECTOR3(350.0f, 420.0f, 0.0f), BLOCKTYPE_NOMAL, BLOCKSTATE_NOMAL, BLOCK_WIDTH * 5, BLOCK_HEIGHT * 1, 2);
		SetBlock(D3DXVECTOR3(670.0f, 420.0f, 0.0f), BLOCKTYPE_NOMAL, BLOCKSTATE_NOMAL, BLOCK_WIDTH * 9, BLOCK_HEIGHT * 1, 2);
		SetBlock(D3DXVECTOR3(970.0f, 420.0f, 0.0f), BLOCKTYPE_NOMAL, BLOCKSTATE_NOMAL, BLOCK_WIDTH * 4, BLOCK_HEIGHT * 1, 2);
		SetBlock(D3DXVECTOR3(1190.0f, 420.0f, 0.0f), BLOCKTYPE_NOMAL, BLOCKSTATE_NOMAL, BLOCK_WIDTH * 5, BLOCK_HEIGHT * 1, 2);
		
		SetBlock(D3DXVECTOR3(340.0f, 340.0f, 0.0f), BLOCKTYPE_NOMAL, BLOCKSTATE_NOMAL, BLOCK_WIDTH * 1, BLOCK_HEIGHT * 3, 2);
		SetBlock(D3DXVECTOR3(20.0f, 500.0f, 0.0f), BLOCKTYPE_NOMAL, BLOCKSTATE_NOMAL, BLOCK_WIDTH * 1, BLOCK_HEIGHT * 3, 2);
		SetBlock(D3DXVECTOR3((SCREEN_WIDTH - 20.0f), 500.0f, 0.0f), BLOCKTYPE_NOMAL, BLOCKSTATE_NOMAL, BLOCK_WIDTH * 1, BLOCK_HEIGHT * 3, 2);
		SetBlock(D3DXVECTOR3(430.0f, 500.0f, 0.0f), BLOCKTYPE_NOMAL, BLOCKSTATE_NOMAL, BLOCK_WIDTH * 1, BLOCK_HEIGHT * 3, 2);
		SetBlock(D3DXVECTOR3((SCREEN_WIDTH / 2), 500.0f, 0.0f), BLOCKTYPE_NOMAL, BLOCKSTATE_NOMAL, BLOCK_WIDTH * 1, BLOCK_HEIGHT * 3, 2);
		SetBlock(D3DXVECTOR3(1190, 200.0f, 0.0f), BLOCKTYPE_NOMAL, BLOCKSTATE_NOMAL, BLOCK_WIDTH * 1, BLOCK_HEIGHT * 3, 2);
		SetBlock(D3DXVECTOR3(1110.0f, 330.0f, 0.0f), BLOCKTYPE_NOMAL, BLOCKSTATE_NOMAL, BLOCK_WIDTH * 1, BLOCK_HEIGHT * 3.5, 2);

		//3段目
		SetBlock(D3DXVECTOR3(20.0f, 280.0f, 0.0f), BLOCKTYPE_NOMAL, BLOCKSTATE_NOMAL, BLOCK_WIDTH * 5, BLOCK_HEIGHT * 1, 2);
		SetBlock(D3DXVECTOR3(260.0f, 280.0f, 0.0f), BLOCKTYPE_NOMAL, BLOCKSTATE_NOMAL, BLOCK_WIDTH * 5, BLOCK_HEIGHT * 1, 2);
		SetBlock(D3DXVECTOR3(560.0f, 280.0f, 0.0f), BLOCKTYPE_NOMAL, BLOCKSTATE_NOMAL, BLOCK_WIDTH * 8, BLOCK_HEIGHT * 1, 2);
		SetBlock(D3DXVECTOR3(905.0f, 280.0f, 0.0f), BLOCKTYPE_NOMAL, BLOCKSTATE_NOMAL, BLOCK_WIDTH * 7.5, BLOCK_HEIGHT * 1, 2);
		SetBlock(D3DXVECTOR3(1250.0f, 280.0f, 0.0f), BLOCKTYPE_NOMAL, BLOCKSTATE_NOMAL, BLOCK_WIDTH * 4, BLOCK_HEIGHT * 1, 2);
		
		SetBlock(D3DXVECTOR3(440.0f, 200.0f, 0.0f), BLOCKTYPE_NOMAL, BLOCKSTATE_NOMAL, BLOCK_WIDTH * 1, BLOCK_HEIGHT * 3, 2);
		SetBlock(D3DXVECTOR3(800.0f, 200.0f, 0.0f), BLOCKTYPE_NOMAL, BLOCKSTATE_NOMAL, BLOCK_WIDTH * 1, BLOCK_HEIGHT * 3, 2);
		SetBlock(D3DXVECTOR3(940.0f, 340.0f, 0.0f), BLOCKTYPE_NOMAL, BLOCKSTATE_NOMAL, BLOCK_WIDTH * 1, BLOCK_HEIGHT * 3, 2);


		//4段目
		SetBlock(D3DXVECTOR3(100.0f, 140.0f, 0.0f), BLOCKTYPE_NOMAL, BLOCKSTATE_NOMAL, BLOCK_WIDTH * 8, BLOCK_HEIGHT * 1, 2);
		SetBlock(D3DXVECTOR3(380.0f, 140.0f, 0.0f), BLOCKTYPE_NOMAL, BLOCKSTATE_NOMAL, BLOCK_WIDTH * 4, BLOCK_HEIGHT * 1, 2);
		SetBlock(D3DXVECTOR3(580.0f, 140.0f, 0.0f), BLOCKTYPE_NOMAL, BLOCKSTATE_NOMAL, BLOCK_WIDTH * 4, BLOCK_HEIGHT * 1, 2);
		SetBlock(D3DXVECTOR3(780.0f, 140.0f, 0.0f), BLOCKTYPE_NOMAL, BLOCKSTATE_NOMAL, BLOCK_WIDTH * 4, BLOCK_HEIGHT * 1, 2);
		SetBlock(D3DXVECTOR3(1100.0f, 140.0f, 0.0f), BLOCKTYPE_NOMAL, BLOCKSTATE_NOMAL, BLOCK_WIDTH * 10, BLOCK_HEIGHT * 1, 2);

		//梯子 -----------------------------------
		//１段目
		SetLadder(D3DXVECTOR3(140.0f, SCREEN_HEIGHT - (BLOCK_HEIGHT * 2.75f), 0.0f), LADDER_WIDTH, LADDER_HEIGHT * 3.5f, LADDER_TYPE_0);
		SetLadder(D3DXVECTOR3(340.0f, SCREEN_HEIGHT - (BLOCK_HEIGHT * 2.75f), 0.0f), LADDER_WIDTH, LADDER_HEIGHT * 3.5f, LADDER_TYPE_0);
		SetLadder(D3DXVECTOR3(540.0f, SCREEN_HEIGHT - (BLOCK_HEIGHT * 2.75f), 0.0f), LADDER_WIDTH, LADDER_HEIGHT * 3.5f, LADDER_TYPE_1);
		SetLadder(D3DXVECTOR3(740.0f, SCREEN_HEIGHT - (BLOCK_HEIGHT * 2.75f), 0.0f), LADDER_WIDTH, LADDER_HEIGHT * 3.5f, LADDER_TYPE_0);
		SetLadder(D3DXVECTOR3((SCREEN_WIDTH - 140.0f), SCREEN_HEIGHT - (BLOCK_HEIGHT * 2.75f), 0.0f), LADDER_WIDTH, LADDER_HEIGHT * 3.5f, LADDER_TYPE_0);
		
		SetLadder(D3DXVECTOR3(230.0f, 470.0f, 0.0f), LADDER_WIDTH, LADDER_HEIGHT * 3.5f, LADDER_TYPE_0);
		SetLadder(D3DXVECTOR3(470.0f, 470.0f, 0.0f), LADDER_WIDTH, LADDER_HEIGHT * 3.5f, LADDER_TYPE_1);
		SetLadder(D3DXVECTOR3(870.0f, 470.0f, 0.0f), LADDER_WIDTH, LADDER_HEIGHT * 3.5f, LADDER_TYPE_0);
		SetLadder(D3DXVECTOR3(1070.0f, 400.0f, 0.0f), LADDER_WIDTH, LADDER_HEIGHT * 7, LADDER_TYPE_0);

		SetLadder(D3DXVECTOR3(140.0f, 330.0f, 0.0f), LADDER_WIDTH, LADDER_HEIGHT * 3.5f, LADDER_TYPE_1);
		SetLadder(D3DXVECTOR3(380.0f, 330.0f, 0.0f), LADDER_WIDTH, LADDER_HEIGHT * 3.5f, LADDER_TYPE_0);
		SetLadder(D3DXVECTOR3(740.0f, 330.0f, 0.0f), LADDER_WIDTH, LADDER_HEIGHT * 3.5f, LADDER_TYPE_1);
		SetLadder(D3DXVECTOR3(1150.0f, 330.0f, 0.0f), LADDER_WIDTH, LADDER_HEIGHT * 3.5f, LADDER_TYPE_1);

		SetLadder(D3DXVECTOR3(280.0f, 190.0f, 0.0f), LADDER_WIDTH, LADDER_HEIGHT * 3.5f, LADDER_TYPE_0);
		SetLadder(D3DXVECTOR3(480.0f, 190.0f, 0.0f), LADDER_WIDTH, LADDER_HEIGHT * 3.5f, LADDER_TYPE_0);
		SetLadder(D3DXVECTOR3(680.0f, 190.0f, 0.0f), LADDER_WIDTH, LADDER_HEIGHT * 3.5f, LADDER_TYPE_0);
		SetLadder(D3DXVECTOR3(880.0f, 190.0f, 0.0f), LADDER_WIDTH, LADDER_HEIGHT * 3.5f, LADDER_TYPE_1);

		//アイテム -----------------------------------
		SetItem(D3DXVECTOR3(60.0f, 80.0f, 0.0f), ITEM_TYPE_0);
		SetItem(D3DXVECTOR3(950.0f, 640.0f, 0.0f), ITEM_TYPE_0);
		SetItem(D3DXVECTOR3(580.0f, 360.0f, 0.0f), ITEM_TYPE_0);
		SetItem(D3DXVECTOR3(50.0f, 640.0f, 0.0f), ITEM_TYPE_0);
		SetItem(D3DXVECTOR3(1010.0f, 360.0f, 0.0f), ITEM_TYPE_0);

		//ゴール -------------------------------------
		SetGoal(D3DXVECTOR3((SCREEN_WIDTH / 2), SCREEN_HEIGHT - (BLOCK_HEIGHT / 2), 0.0f));

		break;
	}
}

void UpdateStage(void)
{
	nCoin = Coin();

	if (g_nCountCoin == 0)
	{
		if (nCoin >= 5)
		{
			switch (g_nS)
			{
			case STAGE_No_0:
				//アイテム -----------------------------------
				SetItem(D3DXVECTOR3(350.0f, 80.0f, 0.0f), ITEM_TYPE_3);
				break;

			case STAGE_No_1:
				SetItem(D3DXVECTOR3((SCREEN_WIDTH / 2) - 60.0f, 210.0f, 0.0f), ITEM_TYPE_3);
				break;
			}
			//サウンドの再生
			PlaySound(SOUND_LABEL_SE_KEY);

			g_nCountCoin = 1;
		}
	}
}